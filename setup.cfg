[metadata]
name = metaproj
platforms = any

[options]
zip_safe = False

install_requires =
    attrs
    click
    pydantic

[options.extras_require]
testing =
	pytest-cov
	pytest
	hypothesis

[options.entry_points]
console_scripts =
    metaproj = metaproj.__main__:main

[options.package_data]

[options.packages.find]
where = src

[aliases]
# Define setup.py command aliases here
test = pytest

[bdist_wheel]
universal = 1

[flake8]
max-line-length = 140
exclude = */migrations/*

[tool:pytest]
testpaths = tests
python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short

[isort]
line_length = 120
known_first_party=metaproj
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
combine_as_imports=True


[flake8]
max-line-length = 120
max-complexity = 14
inline-quotes = single
multiline-quotes = double
ignore = E203, W503

[unimport]
include_star_import = True
check = True


[mypy]
show_error_codes = True
follow_imports = silent
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
disallow_any_generics = True
check_untyped_defs = True
no_implicit_reexport = True
warn_unused_configs = True
disallow_subclassing_any = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
disallow_untyped_calls = True

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = True

# remaining arguments from `mypy --strict` which cause errors
;no_implicit_optional = True
;warn_return_any = True

[mypy-email_validator]
ignore_missing_imports = true

[mypy-dotenv]
ignore_missing_imports = true





